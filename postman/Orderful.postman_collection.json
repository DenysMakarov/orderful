{
	"info": {
		"_postman_id": "4577bbed-ea22-4a80-bd59-8e031ddac5b6",
		"name": "Orderful",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14807312"
	},
	"item": [
		{
			"name": "EDI to JSON",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ProductID*4*8*15*16*23~ProductID*asf*b*c*d*e~AddressID*42*108*3*14~ContactID*59*26~",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5100/api/v1/convert/edi/json",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5100",
					"path": [
						"api",
						"v1",
						"convert",
						"edi",
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Json to XML",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"ProductID\": [\n        {\n            \"ProductID1\": \"4\",\n            \"ProductID2\": \"8\",\n            \"ProductID3\": \"15\",\n            \"ProductID4\": \"16\",\n            \"ProductID5\": \"23\"\n        },\n        {\n            \"ProductID1\": \"a\",\n            \"ProductID2\": \"b\",\n            \"ProductID3\": \"c\",\n            \"ProductID4\": \"d\",\n            \"ProductID5\": \"e\"\n        }\n    ],\n    \"AddressID\": [\n        {\n            \"AddressID1\": \"42\",\n            \"AddressID2\": \"108\",\n            \"AddressID3\": \"3\",\n            \"AddressID4\": \"14\"\n        }\n    ],\n    \"ContactID\": [\n        {\n            \"ContactID1\": \"59\",\n            \"ContactID2\": \"26\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5100/api/v1/convert/json/xml",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5100",
					"path": [
						"api",
						"v1",
						"convert",
						"json",
						"xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "Json to EDI",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"ProductID\": [\n        {\n            \"ProductID1\": \"4\",\n            \"ProductID2\": \"8\",\n            \"ProductID3\": \"15\",\n            \"ProductID4\": \"16\",\n            \"ProductID5\": \"23\"\n        },\n        {\n            \"ProductID1\": \"a\",\n            \"ProductID2\": \"b\",\n            \"ProductID3\": \"c\",\n            \"ProductID4\": \"d\",\n            \"ProductID5\": \"e\"\n        }\n    ],\n    \"AddressID\": [\n        {\n            \"AddressID1\": \"42\",\n            \"AddressID2\": \"108\",\n            \"AddressID3\": \"3\",\n            \"AddressID4\": \"14\"\n        }\n    ],\n    \"ContactID\": [\n        {\n            \"ContactID1\": \"59\",\n            \"ContactID2\": \"26\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5100/api/v1/convert/json/edi",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5100",
					"path": [
						"api",
						"v1",
						"convert",
						"json",
						"edi"
					]
				}
			},
			"response": []
		},
		{
			"name": "Xml to Json ",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<root>\n<ProductID>\n<ProductID1>4</ProductID1>\n<ProductID2>8</ProductID2>\n<ProductID3>15</ProductID3>\n<ProductID4>16</ProductID4>\n<ProductID5>23</ProductID5>\n</ProductID>\n<ProductID>\n<ProductID1>a</ProductID1>\n<ProductID2>b</ProductID2>\n<ProductID3>c</ProductID3>\n<ProductID4>d</ProductID4>\n<ProductID5>e</ProductID5>\n</ProductID>\n<AddressID>\n<AddressID1>42</AddressID1>\n<AddressID2>108</AddressID2>\n<AddressID3>3</AddressID3>\n<AddressID4>14</AddressID4>\n</AddressID>\n<ContactID>\n<ContactID1>59</ContactID1>\n<ContactID2>26</ContactID2>\n</ContactID>\n</root>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5100/api/v1/convert/xml/json",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5100",
					"path": [
						"api",
						"v1",
						"convert",
						"xml",
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "XML to EDI",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<root>\n    <ProductID>\n        <ProductID1>4</ProductID1>\n        <ProductID2>8</ProductID2>\n        <ProductID3>15</ProductID3>\n        <ProductID4>16</ProductID4>\n        <ProductID5>23</ProductID5>\n    </ProductID>\n    <ProductID>\n        <ProductID1>a</ProductID1>\n        <ProductID2>b</ProductID2>\n        <ProductID3>c</ProductID3>\n        <ProductID4>d</ProductID4>\n        <ProductID5>e</ProductID5>\n    </ProductID>\n    <AddressID>\n        <AddressID1>42</AddressID1>\n        <AddressID2>108</AddressID2>\n        <AddressID3>3</AddressID3>\n        <AddressID4>14</AddressID4>\n    </AddressID>\n    <ContactID>\n        <ContactID1>59</ContactID1>\n        <ContactID2>26</ContactID2>\n    </ContactID>\n</root>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5100/api/v1/convert/xml/edi",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5100",
					"path": [
						"api",
						"v1",
						"convert",
						"xml",
						"edi"
					]
				}
			},
			"response": []
		},
		{
			"name": "EDi to XML",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "ISA*00*          *00*          *12*5032337522     *01*048337914      *190225*1532*^*00501*000001367*0*P*>~GS*PO*SENDER*RECEIVER*20190325*1532*572*X*005010~ST*850*000000579~BEG*00*SA*0097129080**20190325~REF*DP*0041~REF*IA*34354104~PER*BD*LD*TE*(503) 232-8844~FOB*CC~CSH*Y~ITD**2*****60*****NET 60 DAYS~DTM*001*20190404~DTM*002*20190411~DTM*010*20190325~N9*ZZ*COMMENTS~MTX**REP:BOB:573-888-8888~MTX**FAX #:573-888-8888~MTX**PROVIDE A GENERAL COMPLIANCY CERTIFICATE FOR~MTX**APPLICABLE PRODUCTS MANUFACTURED AFTER~MTX**NOVEMBER 12, 2008 INDICATING THAT THE PRODUCTS~MTX**HAVE MET ALL APPLICABLE PRODUCT SAFETY STANDARDS~MTX**AS PER U.S. CONSUMER PRODUCTS SAFETY IMPROVEMENT~MTX**ACT OF 2008. CERTIFICATES THAT ARE NOT ALREADY~MTX**ACCESSIBLE IN ELECTRONIC FORMAT ACCORDING TO~MTX**CPSC GUIDELINES SHOULD BE~MTX**EMAILED TO notarealemail@orderful.com~N1*BT*DEPT STORE, INC.*9*0079088090000~N3*P O BOX 305248~N4*NASHVILLE*TN*372305103~N1*ST*DEPT STORE*9*0079088094461~N2*CHEHALIS RSC DC - HOME/HCC~N3*224 MAURIN RD.~N4*CHEHALIS*WA*985328716~N1*BY*DEPT STORE, INC.*9*0079088090000~PO1*1*21*EA*16.5**UP*014306929699*PI*04598244*VN*US840116*VE*RUST*C3*0942/0965~PID*F*08***19\" PLANTER RUST~PID*F*74***19\"~PO4*1*************3~PO1*2*21*EA*16.5**UP*014306923895*PI*05185047*VN*US840688*VE*LAVA*C3*0942/0965~PID*F*08***19\" PLANTER LAVA US840688~PID*F*74***19\"~PO4*1*************3~PO1*3*10*EA*11**UP*014306929798*PI*14598241*VN*US839116*VE*RUST*C3*0942/0965~PID*F*08***15\" PLANTER RUST~PID*F*74***15\"~PO4*1*************5~PO1*4*39*EA*19.5**UP*014306923901*PI*25185041*VN*US841688*VE*LAVA*C3*0942/0965~PID*F*08***23\" PLANTER LAVA US841688~PID*F*74***23\"~PO4*1*************3~PO1*5*12*EA*19.5**UP*014306929705*PI*93598248*VN*US841116*VE*RUST*C3*0942/0965~PID*F*08***23\" PLANTER RUST~PID*F*74***23\"~PO4*1*************3~PO1*6*25*EA*11**UP*014306923833*PI*94185041*VN*US839688*VE*LAVA*C3*0942/0965~PID*F*08***15\" PLANTER LAVA US839688~PID*F*74***15\"~PO4*1*************5~CTT*6~SE*57*000000579~GE*1*572~IEA*1*000001467~",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5100/api/v1/convert/edi/xml",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5100",
					"path": [
						"api",
						"v1",
						"convert",
						"edi",
						"xml"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}